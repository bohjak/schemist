[
	{
		"uri": "https://example.com",
		"raw": {
			"description": "Schema for forms definitions.",
			"title": "Forms Schema",
			"type": "object",
			"properties": {
				"id": {
					"description": "The id of the form definition, by which the form is accessible by the FDS. It should consists of tenant and form and application.",
					"title": "Form Definition ID",
					"pattern": "^.+:.+$",
					"type": "string"
				},
				"tenant": {
					"description": "The tenant should be the same as the DCRM-Broker Backend Tenant.",
					"title": "FDS Tenant",
					"type": "string"
				},
				"form": {
					"description": "The name for the form (e.g. quote, contact, testdrive, service,...)",
					"title": "Form Name",
					"type": "string"
				},
				"version": {
					"description": "Version Number.",
					"type": "number"
				},
				"headline": {
					"description": "i18n key or direct value for form's headline",
					"type": "string"
				},
				"subheadline": {
					"description": "i18n key or direct value for form's sub headline",
					"type": "string"
				},
				"submitFormErrorMessage": {
					"description": "Error message to be displayed when form submission fails",
					"type": "string"
				},
				"formStep": {
					"description": "General configuration for all form steps",
					"title": "Form Step Configuration",
					"type": "object",
					"properties": {
						"stepButtonLabel": {
							"description": "i18n key for next button label",
							"type": "string"
						},
						"submitButtonLabel": {
							"description": "i18n key for submit button label",
							"type": "string"
						}
					}
				},
				"configuration": {
					"description": "Configuration properties.",
					"$ref": "#/definitions/FormConfiguration"
				},
				"hiddenValues": {
					"description": "Values to be passed through to the OPS (or specified target URL) without being displayed in the form",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/AdobeVisitorID"
							},
							{
								"$ref": "#/definitions/AppointmentSelectorHiddenValue"
							},
							{
								"$ref": "#/definitions/CarConfigurationHiddenValue"
							},
							{
								"$ref": "#/definitions/CustomerData"
							},
							{
								"$ref": "#/definitions/DealerSelectorHiddenValue"
							},
							{
								"$ref": "#/definitions/FDS"
							},
							{
								"$ref": "#/definitions/MarketingCode"
							},
							{
								"$ref": "#/definitions/SessionStorage"
							},
							{
								"$ref": "#/definitions/ServiceAssistantHiddenValue"
							}
						]
					}
				},
				"fields": {
					"description": "Fields to be displayed inside the form",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/AppointmentSelector"
							},
							{
								"$ref": "#/definitions/Checkbox"
							},
							{
								"$ref": "#/definitions/DealerSelector"
							},
							{
								"$ref": "#/definitions/DoubleSelect"
							},
							{
								"$ref": "#/definitions/FeatureAppSummaryField"
							},
							{
								"$ref": "#/definitions/FormGroup"
							},
							{
								"$ref": "#/definitions/FormStep"
							},
							{
								"$ref": "#/definitions/Input"
							},
							{
								"$ref": "#/definitions/MarketingConsentText"
							},
							{
								"$ref": "#/definitions/ModelSelector"
							},
							{
								"$ref": "#/definitions/Radio"
							},
							{
								"$ref": "#/definitions/Richtext"
							},
							{
								"$ref": "#/definitions/Select"
							},
							{
								"$ref": "#/definitions/SummaryField"
							},
							{
								"$ref": "#/definitions/Textarea"
							}
						]
					}
				},
				"successPage": {
					"description": "DEPRECATED: Use form step with successPage set to true\nand submitFormErrorMessage instead",
					"title": "[DEPRECATED] Success Page Config",
					"type": "object",
					"properties": {
						"headline": {
							"description": "DEPRECATED: Moved to form step field\n\ni18n key for success page headline",
							"type": "string"
						},
						"content": {
							"description": "DEPRECATED: Moved to form step field\n\ni18n key for success page content",
							"type": "string"
						},
						"buttonLabel": {
							"description": "DEPRECATED: Moved to form step field\n\ni18n key for success page button label",
							"type": "string"
						},
						"errorMessage": {
							"description": "DEPRECATED: Moved to submitFormErrorMessage\n\ni18n key for success page error message",
							"type": "string"
						}
					}
				}
			},
			"required": [
				"fields",
				"form",
				"id",
				"tenant"
			],
			"definitions": {
				"FormConfiguration": {
					"description": "Configuration properties.",
					"type": "object",
					"properties": {
						"tracking": {
							"description": "Tracking.",
							"type": "object",
							"properties": {
								"formType": {
									"description": "Form type used for tracking.",
									"type": "string"
								},
								"formName": {
									"description": "Form name used for tracking.",
									"type": "string"
								}
							}
						},
						"loginRequired": {
							"description": "Whether user must be login in order to enter the form. If se to true, if user is not logged in it will redirect to login landing page.",
							"type": "boolean"
						},
						"displayMode": {
							"description": "Value provided by FDS service backend. Specify behaiviour of the feature app",
							"type": "string"
						},
						"targetUrl": {
							"description": "Processed opportunities (filled values) from the form will be sent to this URL, if not filled in, default OPS will be used",
							"type": "string"
						},
						"dealerFiltersMapping": {
							"description": "Specifies mapping from car configuration data to dealer filters. Works by specifying key/value pairs of the car configuration object. Nested key/value pairs will be interpreted as logical AND statements (i.e.: {\"carlineId\":{\"01234\":{\"trimName\":{\"abc\":{\"filter\":[\"def\"]}}}}} will apply filter \"def\" only if the selected car configuration has carline id 01234 AND trim name \"abc\".",
							"examples": [
								{
									"carlineId": {
										"30100": {
											"and": {
												"salesGroupId": {
													"30002": {
														"filter": [
															"E_SALES"
														]
													}
												}
											}
										},
										"30315": {
											"and": {
												"salesGroupId": {
													"30200": {
														"and": {
															"trimName": {
																"gte": {
																	"filter": [
																		"E_SALES"
																	]
																}
															}
														}
													},
													"30205": {
														"and": {
															"trimName": {
																"e-golf": {
																	"filter": [
																		"E_SALES"
																	]
																}
															}
														}
													}
												}
											}
										},
										"31300": {
											"and": {
												"salesGroupId": {
													"30550": {
														"and": {
															"trimName": {
																"gte": {
																	"filter": [
																		"E_SALES"
																	]
																}
															}
														}
													}
												}
											}
										},
										"31350": {
											"and": {
												"salesGroupId": {
													"30599": {
														"and": {
															"trimName": {
																"gte": {
																	"filter": [
																		"E_SALES"
																	]
																}
															}
														}
													}
												}
											}
										}
									}
								}
							],
							"$ref": "#/definitions/DealerFiltersMapping"
						},
						"captcha": {
							"description": "Configuration for hCaptcha. If either key is not supplied or invalid, user verification will be skipped.",
							"type": "object",
							"properties": {
								"siteKey": {
									"description": "Public API key.",
									"type": "string"
								},
								"secretKey": {
									"description": "!!!FOR TESTING ONLY!!! Private API key.",
									"type": "string"
								},
								"scoreThreshold": {
									"description": "Cutoff for who is considered a bot.\nFloat 0 <= scoreThreshold <= 1\nRecommended 0.8\nRead more at https://docs.hcaptcha.com/enterprise/scores_and_modes#interpreting-normed-scores",
									"type": "number"
								}
							}
						}
					}
				},
				"DealerFiltersMapping": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/Key"
					}
				},
				"Key": {
					"description": "Key of the car configuration property",
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/Value"
					}
				},
				"Value": {
					"description": "Value of the car configuration property",
					"type": "object",
					"properties": {
						"filter": {
							"description": "Array of dealer filters",
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"and": {
							"type": "object",
							"additionalProperties": {
								"$ref": "#/definitions/Key"
							}
						}
					}
				},
				"AdobeVisitorID": {
					"description": "Value is taken from window object",
					"title": "Adobe Visitor ID",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"adobe-visitor-id"
							]
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						}
					},
					"required": [
						"cid",
						"source"
					]
				},
				"AppointmentSelectorHiddenValue": {
					"description": "Value is loaded via feature app connector from the Appointment Selector\nFeature Service.",
					"title": "Appointment Selector",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"appointment-selector"
							]
						},
						"cidPrefix": {
							"description": "Prefix for CIDs defined in this fields mapping",
							"type": "string"
						},
						"connectorMapping": {
							"$ref": "#/definitions/AppointmentSelectorConnectorMapping"
						}
					},
					"required": [
						"connectorMapping",
						"source"
					]
				},
				"AppointmentSelectorConnectorMapping": {
					"description": "Defines a mapping from Appointment Feature Service data to CID/OSSPath pairs",
					"type": "object",
					"properties": {
						"date[]": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"startTimeSpan[]": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"endTimeSpan[]": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						}
					}
				},
				"ConnectorValue": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"type": "object",
					"properties": {
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						}
					}
				},
				"CarConfigurationHiddenValue": {
					"description": "Value is loaded via feature app connector from the Car Configuration\nFeature Service.",
					"title": "Car Configuration",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"car-configuration"
							]
						},
						"cidPrefix": {
							"description": "Prefix for CIDs defined in this fields mapping",
							"type": "string"
						},
						"connectorMapping": {
							"$ref": "#/definitions/CarConfigurationConnectorMapping"
						}
					},
					"required": [
						"connectorMapping",
						"source"
					]
				},
				"CarConfigurationConnectorMapping": {
					"description": "Defines a mapping from Car Configuration Feature Service data to CID/OSSPath pairs",
					"type": "object",
					"properties": {
						"carlineId": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"salesGroupId": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"trimName": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"modelId": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"modelYear": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"modelVersion": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"interiorId": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"exteriorId": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						}
					}
				},
				"CustomerData": {
					"description": "Value is taken from the customers data object",
					"title": "Customer Data",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"customerData"
							]
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						},
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"profileMappingPath": {
							"description": "Path to value in the user profile data model",
							"type": "string"
						},
						"fallbackValue": {
							"description": "Value in case nothing exists under the specified path",
							"type": "string"
						}
					},
					"required": [
						"cid",
						"profileMappingPath",
						"source"
					]
				},
				"DealerSelectorHiddenValue": {
					"description": "Value is loaded via feature app connector from the Dealer Search\nFeature Service.",
					"title": "Dealer Selector",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"dealer-selector"
							]
						},
						"cidPrefix": {
							"description": "Prefix for CIDs defined in this fields mapping",
							"type": "string"
						},
						"connectorMapping": {
							"$ref": "#/definitions/DealerSelectorConnectorMapping"
						}
					},
					"required": [
						"connectorMapping",
						"source"
					]
				},
				"DealerSelectorConnectorMapping": {
					"description": "Defines a mapping from Dealer Search Feature Service data to CID/OSSPath pairs",
					"type": "object",
					"properties": {
						"dealerId": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"dealerName": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"dealerStreet": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"dealerPostCode": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"dealerCity": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"dealerCountry": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"dealerEmail": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"dealerPhone": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"dealerFax": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						}
					}
				},
				"FDS": {
					"description": "Value is set here in FDS",
					"title": "FDS",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"fds"
							]
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						},
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"value": {
							"description": "Value posted to the Opportunity Service (OPS)",
							"type": [
								"string",
								"number",
								"boolean"
							]
						}
					},
					"required": [
						"cid",
						"source",
						"value"
					]
				},
				"MarketingCode": {
					"description": "Marketing code generated from car data",
					"title": "Marketing Code",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"marketingCode"
							]
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						},
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"useVictor": {
							"description": "If true, VICTOR will be used to fetch the marketing codeinstead of VICCI",
							"type": "boolean"
						}
					},
					"required": [
						"cid",
						"source"
					]
				},
				"SessionStorage": {
					"description": "Value comes from session storage",
					"title": "Session Storage",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"sessionStorage"
							]
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						},
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"key": {
							"description": "Key under which the value is saved in session storage",
							"type": "string"
						},
						"defaultValue": {
							"description": "Value to be sent when there is nothing in the session storage",
							"type": "string"
						}
					},
					"required": [
						"cid",
						"key",
						"source"
					]
				},
				"ServiceAssistantHiddenValue": {
					"description": "Values loaded via feature app connector from the Service Assistant Feature App",
					"title": "Service Assistant",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"service-assistant"
							]
						},
						"cidPrefix": {
							"description": "Prefix for CIDs defined in this fields mapping",
							"type": "string"
						},
						"connectorMapping": {
							"$ref": "#/definitions/ServiceAssistantConnectorMapping"
						}
					},
					"required": [
						"connectorMapping",
						"source"
					]
				},
				"ServiceAssistantConnectorMapping": {
					"description": "Defines a mapping from Feature Assistant",
					"type": "object",
					"properties": {
						"vin": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"currentMileage": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"annualMileage": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"currency": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"mileageType": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"selectedServiceEventDescription": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"selectedServiceEventBrandPackageNR": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"selectedServiceEventServicePrice": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"selectedServiceEventPredictedServiceDate": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"selectedServicePositionsDescription[]": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"selectedServicePositionsBrandPackageNR[]": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"selectedServicePositionsServicePrice[]": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"selectedServicePositionsPredictedServiceDate[]": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"selectedSpecialOffersName[]": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						},
						"selectedSpecialOffersPrice[]": {
							"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
							"$ref": "#/definitions/ConnectorValue"
						}
					}
				},
				"AppointmentSelector": {
					"description": "A Feature App for selecting a date and a time for an appointment",
					"title": "Appointment Selector",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"appointment-selector"
							]
						},
						"cidPrefix": {
							"description": "Prefix for CIDs defined in this fields mapping",
							"type": "string"
						},
						"contentConfig": {
							"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
							"type": "string"
						},
						"required": {
							"description": "Marks the field as mandatory.",
							"title": "Is Required",
							"type": "boolean"
						},
						"connectorMapping": {
							"$ref": "#/definitions/AppointmentSelectorConnectorMapping"
						}
					},
					"required": [
						"connectorMapping",
						"type"
					]
				},
				"Checkbox": {
					"description": "A checkbox allows the user to select one or more options of a limited number\nof choices.",
					"title": "Checkbox",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"checkbox"
							]
						},
						"options": {
							"description": "A user can select zero (if not required), one, or more options",
							"type": "array",
							"items": {
								"$ref": "#/definitions/CheckboxOption"
							}
						},
						"label": {
							"description": "The i18n key or direct translation for the field label.",
							"type": "string"
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						},
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"required": {
							"description": "Marks the field as mandatory.",
							"title": "Is Required",
							"type": "boolean"
						},
						"errorMessage": {
							"description": "The i18n key or direct translation for the errormessage if a validation fails.",
							"type": "string"
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"anyOf": [
									{
										"$ref": "#/definitions/RequiredIf"
									},
									{
										"$ref": "#/definitions/VisibleIf"
									}
								]
							}
						},
						"tracked": {
							"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
							"title": "Is Tracked",
							"type": "boolean"
						},
						"prefilled": {
							"description": "How is the field going to be prefilled",
							"anyOf": [
								{
									"$ref": "#/definitions/FdsPrefilled"
								},
								{
									"$ref": "#/definitions/AuthservicePrefilled"
								}
							]
						}
					},
					"required": [
						"cid",
						"label",
						"options",
						"type"
					]
				},
				"CheckboxOption": {
					"description": "Option for the checkbox field",
					"title": "Option",
					"type": "object",
					"properties": {
						"valueUnchecked": {
							"description": "The value to be submitted when the checkbox is NOT checked.",
							"type": [
								"string",
								"boolean"
							]
						},
						"preselected": {
							"description": "Preselects the checkbox.",
							"type": "boolean"
						},
						"label": {
							"description": "The i18n key or direct translation for the displayed option text.",
							"type": "string"
						},
						"value": {
							"description": "The i18n key or direct translation for the option value (not displayed).",
							"type": [
								"string",
								"boolean"
							]
						},
						"readonly": {
							"description": "Prevents the user from changing the value.",
							"type": "boolean"
						}
					},
					"required": [
						"label",
						"value"
					]
				},
				"RequiredIf": {
					"description": "Makes this field required based on the value of some other field in the form.",
					"title": "Required If",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"requiredIf"
							]
						},
						"cid": {
							"description": "CID of the field that should trigger this dependency.",
							"title": "Trigger CID",
							"type": "string"
						},
						"value": {
							"description": "Specific value of the depended on field to trigger the dependency\n(blank means any value).",
							"type": "string"
						},
						"negate": {
							"description": "If selected the dependency will only be triggered\nif the condition is NOT met",
							"type": "boolean"
						}
					},
					"required": [
						"cid",
						"type"
					]
				},
				"VisibleIf": {
					"description": "Makes this field visible based on the value of some other field in the form.",
					"title": "Visible If",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"visibleIf"
							]
						},
						"cid": {
							"description": "CID of the field that should trigger this dependency.",
							"title": "Trigger CID",
							"type": "string"
						},
						"value": {
							"type": [
								"string",
								"boolean"
							]
						},
						"negate": {
							"description": "If selected the dependency will only be triggered\nif the condition is NOT met",
							"type": "boolean"
						}
					},
					"required": [
						"cid",
						"type"
					]
				},
				"FdsPrefilled": {
					"description": "With a value defined here in the form definition",
					"title": "FDS",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"fds"
							]
						},
						"value": {
							"description": "The field will be prefilled with this value",
							"type": "string"
						}
					},
					"required": [
						"source",
						"value"
					]
				},
				"AuthservicePrefilled": {
					"description": "With a value taken from the customer data object from the Auth Service",
					"title": "Customer Data",
					"type": "object",
					"properties": {
						"source": {
							"type": "string",
							"enum": [
								"authservice"
							]
						},
						"profileMappingPath": {
							"description": "Path to value in the user profile data model",
							"type": "string"
						},
						"fallbackValue": {
							"description": "Value in case nothing exists under the specified path",
							"type": "string"
						}
					},
					"required": [
						"profileMappingPath",
						"source"
					]
				},
				"DealerSelector": {
					"description": "A Feature App for search for and selecting a dealer",
					"title": "Dealer Selector",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"dealer-selector"
							]
						},
						"cidPrefix": {
							"description": "Prefix for CIDs defined in this fields mapping",
							"type": "string"
						},
						"required": {
							"description": "Marks the field as mandatory.",
							"title": "Is Required",
							"type": "boolean"
						},
						"contentConfig": {
							"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
							"type": "string"
						},
						"hideIfDataPresent": {
							"description": "If is true, this feature app component will be hidden if component has data",
							"type": "boolean"
						},
						"connectorMapping": {
							"$ref": "#/definitions/DealerSelectorConnectorMapping"
						}
					},
					"required": [
						"connectorMapping",
						"type"
					]
				},
				"DoubleSelect": {
					"description": "A double select field is a dropdown field containing different information\nto be selected by the customer.",
					"title": "Double Select",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"double-select"
							]
						},
						"errorMessage": {
							"description": "The i18n key or direct translation for the errormessage if a validation fails.",
							"type": "string"
						},
						"defaultSubmitValue": {
							"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
							"type": "string"
						},
						"primary": {
							"$ref": "#/definitions/DoubleSelectBase",
							"description": "Configuration for the first select"
						},
						"secondary": {
							"$ref": "#/definitions/DoubleSelectBase",
							"description": "Configuration for the second select"
						},
						"options": {
							"description": "A double select option field is a dropdown field containing different\ninformation to be selected by the customer.",
							"type": "array",
							"items": {
								"$ref": "#/definitions/DoubleOption"
							}
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"$ref": "#/definitions/VisibleIf"
							}
						},
						"tracked": {
							"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
							"title": "Is Tracked",
							"type": "boolean"
						}
					},
					"required": [
						"options",
						"primary",
						"secondary",
						"type"
					]
				},
				"DoubleSelectBase": {
					"type": "object",
					"properties": {
						"label": {
							"description": "The i18n key or direct translation for the field label.",
							"type": "string"
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						},
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"placeholder": {
							"description": "The i18n key or direct translation for the field placeholder.",
							"type": "string"
						},
						"required": {
							"description": "Marks the field as mandatory.",
							"title": "Is Required",
							"type": "boolean"
						},
						"prefilled": {
							"description": "How is the field going to be prefilled",
							"anyOf": [
								{
									"$ref": "#/definitions/FdsPrefilled"
								},
								{
									"$ref": "#/definitions/AuthservicePrefilled"
								}
							]
						}
					},
					"required": [
						"cid",
						"label",
						"placeholder"
					]
				},
				"DoubleOption": {
					"description": "Nested options for the double select field",
					"title": "Option Group",
					"type": "object",
					"properties": {
						"options": {
							"description": "Options to be displayed in the secondary select when this option\nis selected in the primary select.",
							"type": "array",
							"items": {
								"$ref": "#/definitions/Option"
							}
						},
						"label": {
							"description": "The i18n key or direct translation for the displayed option text.",
							"type": "string"
						},
						"value": {
							"description": "The i18n key or direct translation for the option value (not displayed).",
							"type": [
								"string",
								"boolean"
							]
						},
						"readonly": {
							"description": "Prevents the user from changing the value.",
							"type": "boolean"
						}
					},
					"required": [
						"label",
						"options",
						"value"
					]
				},
				"Option": {
					"description": "Represents one of the options the user can choose in e.g. the Select\nor Radio Group fields.",
					"title": "Option",
					"type": "object",
					"properties": {
						"label": {
							"description": "The i18n key or direct translation for the displayed option text.",
							"type": "string"
						},
						"value": {
							"description": "The i18n key or direct translation for the option value (not displayed).",
							"type": [
								"string",
								"boolean"
							]
						},
						"readonly": {
							"description": "Prevents the user from changing the value.",
							"type": "boolean"
						}
					},
					"required": [
						"label",
						"value"
					]
				},
				"FeatureAppSummaryField": {
					"description": "A summary field that can show information from a Feature Service",
					"title": "Feature App Summary Field",
					"type": "object",
					"properties": {
						"type": {
							"enum": [
								"appointment-selector-summary",
								"dealer-selector-summary"
							],
							"type": "string"
						},
						"label": {
							"description": "I18n key for the markdown label of the summary field. Label can contain %CID%\nplaceholders that will be replaced with values from the form",
							"type": "string"
						},
						"icon": {
							"description": "Icon to be shown next to the summary text",
							"enum": [
								"calendar",
								"checkmark",
								"close",
								"internet",
								"locate",
								"mail",
								"phone",
								"pin",
								"star-filled"
							],
							"type": "string"
						},
						"contentConfig": {
							"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
							"type": "string"
						},
						"target": {
							"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
							"enum": [
								"_blank",
								"_parent",
								"_self",
								"_top"
							],
							"type": "string"
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"$ref": "#/definitions/VisibleIf"
							}
						}
					},
					"required": [
						"type"
					]
				},
				"FormGroup": {
					"description": "Enable group elements and provide specific title for an element group",
					"title": "Form Group",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"form-group"
							]
						},
						"title": {
							"description": "The i18n key or direct translation for the field title",
							"type": "string"
						},
						"accentuated": {
							"description": "Flag to enable accentuated design",
							"type": "boolean"
						},
						"fields": {
							"description": "Field types that could be grouped",
							"type": "array",
							"items": {
								"anyOf": [
									{
										"$ref": "#/definitions/AppointmentSelector"
									},
									{
										"$ref": "#/definitions/Checkbox"
									},
									{
										"$ref": "#/definitions/DealerSelector"
									},
									{
										"$ref": "#/definitions/DoubleSelect"
									},
									{
										"$ref": "#/definitions/FeatureAppSummaryField"
									},
									{
										"$ref": "#/definitions/FormGroup"
									},
									{
										"$ref": "#/definitions/Input"
									},
									{
										"$ref": "#/definitions/MarketingConsentText"
									},
									{
										"$ref": "#/definitions/ModelSelector"
									},
									{
										"$ref": "#/definitions/Radio"
									},
									{
										"$ref": "#/definitions/Richtext"
									},
									{
										"$ref": "#/definitions/Select"
									},
									{
										"$ref": "#/definitions/SummaryField"
									},
									{
										"$ref": "#/definitions/Textarea"
									}
								]
							}
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"$ref": "#/definitions/VisibleIf"
							}
						}
					},
					"required": [
						"fields",
						"type"
					]
				},
				"Input": {
					"description": "The input field is the most basic general form element, showing just a simple\ninput field for numbers or strings.",
					"title": "Input",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"input"
							]
						},
						"label": {
							"description": "The i18n key or direct translation for the field label.",
							"type": "string"
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						},
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"required": {
							"description": "Marks the field as mandatory.",
							"title": "Is Required",
							"type": "boolean"
						},
						"defaultSubmitValue": {
							"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
							"type": "string"
						},
						"errorMessage": {
							"description": "The i18n key or direct translation for the errormessage if a validation fails.",
							"type": "string"
						},
						"inputType": {
							"description": "date, email, url, number",
							"enum": [
								"date",
								"email",
								"number",
								"text",
								"url"
							],
							"type": "string"
						},
						"pattern": {
							"description": "Regex which has to be entered and will be validated",
							"type": "string"
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"anyOf": [
									{
										"$ref": "#/definitions/RequiredIf"
									},
									{
										"$ref": "#/definitions/VisibleIf"
									}
								]
							}
						},
						"tracked": {
							"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
							"title": "Is Tracked",
							"type": "boolean"
						},
						"prefilled": {
							"description": "How is the field going to be prefilled",
							"anyOf": [
								{
									"$ref": "#/definitions/FdsPrefilled"
								},
								{
									"$ref": "#/definitions/AuthservicePrefilled"
								}
							]
						}
					},
					"required": [
						"cid",
						"inputType",
						"label",
						"type"
					]
				},
				"MarketingConsentText": {
					"description": "Text field displaying the latest MEV (Marketing Einverständnis Erklärung -\nMarketing Consent Statement) texts from the IDK (VW Identity Kit)",
					"title": "Marketing Consent",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"mev-text"
							]
						},
						"cid": {
							"description": "Under this CID will be stored the outcome of user consent (either true or false)\n\nIf we will not show the radio buttons to the user, cid value will not be sent",
							"type": "string"
						},
						"target": {
							"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
							"enum": [
								"_blank",
								"_parent",
								"_self",
								"_top"
							],
							"type": "string"
						},
						"mdKey": {
							"description": "Identifier of the MEV text",
							"type": "string"
						},
						"consentAlreadyGiven": {
							"description": "Provides information for the simplified screen that shows that the user has already consented",
							"type": "object",
							"properties": {
								"linkText": {
									"description": "Text for Link to account or consent management",
									"type": "string"
								},
								"linkHref": {
									"description": "Href for Link to user account or consent management",
									"type": "string"
								},
								"text": {
									"description": "Main text that will be shown",
									"type": "string"
								}
							},
							"required": [
								"text"
							]
						},
						"defaultTitle": {
							"description": "Default title, will be shown only if MEV declaration could not be fetched or MEV declaration does not contain it",
							"type": "string"
						},
						"legalText": {
							"description": "I18n key or text directly.",
							"type": "string"
						},
						"defaultLegalBodies": {
							"description": "Default legal bodies (keys), will be shown only if MEV declaration could not be fetched or MEV declaration does not contain it\nAll of them will be translated from i18n translations under general.legalBodies[key]",
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"legalLinkText": {
							"description": "Text for Link to legal management",
							"type": "string"
						},
						"legalLinkHref": {
							"description": "Href for Link to legal management",
							"type": "string"
						},
						"defaultText": {
							"description": "Displayed in case the MEV declaration could not be fetched, or if MEV declaration does not contain it. <br/>\nMarkdown supported",
							"type": "string"
						},
						"defaultDisclaimer": {
							"description": "Default disclaimer, will be shown only if MEV declaration could not be fetched or MEV declaration does not contain it. <br/>\nMarkdown supported",
							"type": "string"
						},
						"agreeText": {
							"description": "Text for agree button for the user consent to MEV",
							"type": "string"
						},
						"disagreeText": {
							"description": "Text for disagree button for the user consent to MEV",
							"type": "string"
						},
						"trackingKey": {
							"description": "Text used as a key for tracking of marketing consent",
							"type": "string"
						},
						"errorMessage": {
							"description": "Will be shown if user has not sent permission to Marketing API\nand has not selected any radio option",
							"type": "string"
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"$ref": "#/definitions/VisibleIf"
							}
						}
					},
					"required": [
						"agreeText",
						"cid",
						"consentAlreadyGiven",
						"disagreeText",
						"mdKey",
						"type"
					]
				},
				"ModelSelector": {
					"description": "A Feature App for selecting a car configuration",
					"title": "Model Selector",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"model-selector"
							]
						},
						"cidPrefix": {
							"description": "Prefix for CIDs defined in this fields mapping",
							"type": "string"
						},
						"contentConfig": {
							"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
							"type": "string"
						},
						"required": {
							"description": "Marks the field as mandatory.",
							"title": "Is Required",
							"type": "boolean"
						},
						"connectorMapping": {
							"$ref": "#/definitions/CarConfigurationConnectorMapping"
						},
						"hideIfDataPresent": {
							"description": "If is true, this feature app component will be hidden if component has data",
							"type": "boolean"
						}
					},
					"required": [
						"connectorMapping",
						"type"
					]
				},
				"Radio": {
					"description": "Only one radio button in a given group can be selected at the same time.\nThe user cannot deselect a once selected radio, therefore it is recommended\nto only use radio groups as required and/or with a preselected option.",
					"title": "Radio Group",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"radio"
							]
						},
						"label": {
							"description": "The i18n key or direct translation for the field label.",
							"type": "string"
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						},
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"required": {
							"description": "Marks the field as mandatory.",
							"title": "Is Required",
							"type": "boolean"
						},
						"defaultSubmitValue": {
							"type": [
								"string",
								"boolean"
							]
						},
						"options": {
							"description": "A user can select zero (if not required) or one of the options.\nThey cannot, however, deselect an option.",
							"type": "array",
							"items": {
								"$ref": "#/definitions/Option"
							}
						},
						"errorMessage": {
							"description": "The i18n key or direct translation for the errormessage if a validation fails.",
							"type": "string"
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"anyOf": [
									{
										"$ref": "#/definitions/RequiredIf"
									},
									{
										"$ref": "#/definitions/VisibleIf"
									}
								]
							}
						},
						"tracked": {
							"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
							"title": "Is Tracked",
							"type": "boolean"
						},
						"prefilled": {
							"description": "How is the field going to be prefilled",
							"anyOf": [
								{
									"$ref": "#/definitions/FdsPrefilled"
								},
								{
									"$ref": "#/definitions/AuthservicePrefilled"
								}
							]
						},
						"isContactChannel": {
							"type": "boolean"
						}
					},
					"required": [
						"cid",
						"label",
						"options",
						"type"
					]
				},
				"Richtext": {
					"description": "Rich Text is a field type that enables to create text content, supporting\nvarious text formats such as bold, italic, links, lists etc.",
					"title": "Richtext",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"richtext"
							]
						},
						"target": {
							"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
							"enum": [
								"_blank",
								"_parent",
								"_self",
								"_top"
							],
							"type": "string"
						},
						"value": {
							"description": "I18n key for the content of the richtext field.",
							"type": "string"
						},
						"accentuated": {
							"description": "Flag to enable accentuated design (notification bar)",
							"type": "boolean"
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"$ref": "#/definitions/VisibleIf"
							}
						}
					},
					"required": [
						"type",
						"value"
					]
				},
				"Select": {
					"description": "A select field is a dropdown field containing different information\nto be selected by the customer.",
					"title": "Select",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"select"
							]
						},
						"label": {
							"description": "The i18n key or direct translation for the field label.",
							"type": "string"
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						},
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"placeholder": {
							"description": "The i18n key or direct translation for the field placeholder.",
							"type": "string"
						},
						"required": {
							"description": "Marks the field as mandatory.",
							"title": "Is Required",
							"type": "boolean"
						},
						"defaultSubmitValue": {
							"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
							"type": "string"
						},
						"options": {
							"description": "A user can select zero (if not required) or one of the options.",
							"type": "array",
							"items": {
								"$ref": "#/definitions/Option"
							}
						},
						"errorMessage": {
							"description": "The i18n key or direct translation for the errormessage if a validation fails.",
							"type": "string"
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"anyOf": [
									{
										"$ref": "#/definitions/RequiredIf"
									},
									{
										"$ref": "#/definitions/VisibleIf"
									}
								]
							}
						},
						"tracked": {
							"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
							"title": "Is Tracked",
							"type": "boolean"
						},
						"disabled": {
							"description": "If checked, the field will be displayed as disabled and the user will\nnot be able to interact with it",
							"title": "Is Disabled",
							"type": "boolean"
						},
						"prefilled": {
							"description": "How is the field going to be prefilled",
							"anyOf": [
								{
									"$ref": "#/definitions/FdsPrefilled"
								},
								{
									"$ref": "#/definitions/AuthservicePrefilled"
								}
							]
						}
					},
					"required": [
						"cid",
						"label",
						"options",
						"placeholder",
						"type"
					]
				},
				"SummaryField": {
					"description": "A summary field that can show information that has been already entered\nby the user into the form",
					"title": "General Summary",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"summary"
							]
						},
						"label": {
							"description": "I18n key for the markdown label of the summary field. Label can contain %CID%\nplaceholders that will be replaced with values from the form",
							"type": "string"
						},
						"value": {
							"description": "I18n key for the markdown content of the summary field. Value can contain %CID% placeholders that will be replaced with values from the form",
							"type": "string"
						},
						"icon": {
							"description": "Icon to be shown next to the summary text",
							"enum": [
								"calendar",
								"checkmark",
								"close",
								"internet",
								"locate",
								"mail",
								"phone",
								"pin",
								"star-filled"
							],
							"type": "string"
						},
						"target": {
							"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
							"enum": [
								"_blank",
								"_parent",
								"_self",
								"_top"
							],
							"type": "string"
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"$ref": "#/definitions/VisibleIf"
							}
						}
					},
					"required": [
						"type"
					]
				},
				"Textarea": {
					"description": "A textarea field represents a multi-line plain-text editing control,useful\nwhen you want to allow users to enter a sizeable amount of free-form text.",
					"title": "Text Area",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"textarea"
							]
						},
						"label": {
							"description": "The i18n key or direct translation for the field label.",
							"type": "string"
						},
						"cid": {
							"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
							"type": "string"
						},
						"ossPath": {
							"description": "OSS path for the XML.",
							"type": "string"
						},
						"required": {
							"description": "Marks the field as mandatory.",
							"title": "Is Required",
							"type": "boolean"
						},
						"errorMessage": {
							"description": "The i18n key or direct translation for the errormessage if a validation fails.",
							"type": "string"
						},
						"pattern": {
							"description": "Regex which has to be entered and will be validated",
							"type": "string"
						},
						"defaultSubmitValue": {
							"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
							"type": "string"
						},
						"readonly": {
							"description": "Marks the field as read only",
							"title": "Is Readonly",
							"type": "boolean"
						},
						"minLength": {
							"description": "Specifies a minimum number of characters that the field is allowed to contain.",
							"type": "number"
						},
						"maxLength": {
							"description": "Specifies a maximum number of characters that the field is allowed to contain.",
							"type": "number"
						},
						"rows": {
							"description": "The number of visible text lines for the control.",
							"type": "number"
						},
						"dependencies": {
							"description": "Conditions influencing the display and behaviour of the field.",
							"title": "Dependencies",
							"type": "array",
							"items": {
								"anyOf": [
									{
										"$ref": "#/definitions/RequiredIf"
									},
									{
										"$ref": "#/definitions/VisibleIf"
									}
								]
							}
						},
						"tracked": {
							"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
							"title": "Is Tracked",
							"type": "boolean"
						},
						"prefilled": {
							"description": "How is the field going to be prefilled",
							"anyOf": [
								{
									"$ref": "#/definitions/FdsPrefilled"
								},
								{
									"$ref": "#/definitions/AuthservicePrefilled"
								}
							]
						}
					},
					"required": [
						"cid",
						"label",
						"type"
					]
				},
				"FormStep": {
					"description": "Groups form fields into consecutive steps",
					"title": "Form Step",
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"form-step"
							]
						},
						"title": {
							"description": "Label of a checkmark shown in the next step",
							"type": "string"
						},
						"skipStep": {
							"description": "If is true, this step will be skipped and in the next step a checkmark icon will be shown",
							"type": "boolean"
						},
						"skipStepIfFieldHasData": {
							"description": "Should contain a field type. If this type is found within this form step and has data the entire form step will be skipped",
							"examples": [
								"model-selector"
							],
							"type": "string"
						},
						"successPage": {
							"type": "boolean"
						},
						"fields": {
							"description": "Fields that can belong to form step.",
							"type": "array",
							"items": {
								"anyOf": [
									{
										"$ref": "#/definitions/AppointmentSelector"
									},
									{
										"$ref": "#/definitions/Checkbox"
									},
									{
										"$ref": "#/definitions/DealerSelector"
									},
									{
										"$ref": "#/definitions/DoubleSelect"
									},
									{
										"$ref": "#/definitions/FeatureAppSummaryField"
									},
									{
										"$ref": "#/definitions/FormGroup"
									},
									{
										"$ref": "#/definitions/Input"
									},
									{
										"$ref": "#/definitions/MarketingConsentText"
									},
									{
										"$ref": "#/definitions/ModelSelector"
									},
									{
										"$ref": "#/definitions/Radio"
									},
									{
										"$ref": "#/definitions/Richtext"
									},
									{
										"$ref": "#/definitions/Select"
									},
									{
										"$ref": "#/definitions/SummaryField"
									},
									{
										"$ref": "#/definitions/Textarea"
									}
								]
							}
						}
					},
					"required": [
						"fields",
						"type"
					]
				}
			},
			"$id": "https://example.com",
			"$schema": "http://json-schema.org/draft-07/schema#"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration",
		"raw": {
			"description": "Configuration properties.",
			"type": "object",
			"properties": {
				"tracking": {
					"description": "Tracking.",
					"type": "object",
					"properties": {
						"formType": {
							"description": "Form type used for tracking.",
							"type": "string"
						},
						"formName": {
							"description": "Form name used for tracking.",
							"type": "string"
						}
					}
				},
				"loginRequired": {
					"description": "Whether user must be login in order to enter the form. If se to true, if user is not logged in it will redirect to login landing page.",
					"type": "boolean"
				},
				"displayMode": {
					"description": "Value provided by FDS service backend. Specify behaiviour of the feature app",
					"type": "string"
				},
				"targetUrl": {
					"description": "Processed opportunities (filled values) from the form will be sent to this URL, if not filled in, default OPS will be used",
					"type": "string"
				},
				"dealerFiltersMapping": {
					"description": "Specifies mapping from car configuration data to dealer filters. Works by specifying key/value pairs of the car configuration object. Nested key/value pairs will be interpreted as logical AND statements (i.e.: {\"carlineId\":{\"01234\":{\"trimName\":{\"abc\":{\"filter\":[\"def\"]}}}}} will apply filter \"def\" only if the selected car configuration has carline id 01234 AND trim name \"abc\".",
					"examples": [
						{
							"carlineId": {
								"30100": {
									"and": {
										"salesGroupId": {
											"30002": {
												"filter": [
													"E_SALES"
												]
											}
										}
									}
								},
								"30315": {
									"and": {
										"salesGroupId": {
											"30200": {
												"and": {
													"trimName": {
														"gte": {
															"filter": [
																"E_SALES"
															]
														}
													}
												}
											},
											"30205": {
												"and": {
													"trimName": {
														"e-golf": {
															"filter": [
																"E_SALES"
															]
														}
													}
												}
											}
										}
									}
								},
								"31300": {
									"and": {
										"salesGroupId": {
											"30550": {
												"and": {
													"trimName": {
														"gte": {
															"filter": [
																"E_SALES"
															]
														}
													}
												}
											}
										}
									}
								},
								"31350": {
									"and": {
										"salesGroupId": {
											"30599": {
												"and": {
													"trimName": {
														"gte": {
															"filter": [
																"E_SALES"
															]
														}
													}
												}
											}
										}
									}
								}
							}
						}
					],
					"$ref": "#/definitions/DealerFiltersMapping"
				},
				"captcha": {
					"description": "Configuration for hCaptcha. If either key is not supplied or invalid, user verification will be skipped.",
					"type": "object",
					"properties": {
						"siteKey": {
							"description": "Public API key.",
							"type": "string"
						},
						"secretKey": {
							"description": "!!!FOR TESTING ONLY!!! Private API key.",
							"type": "string"
						},
						"scoreThreshold": {
							"description": "Cutoff for who is considered a bot.\nFloat 0 <= scoreThreshold <= 1\nRecommended 0.8\nRead more at https://docs.hcaptcha.com/enterprise/scores_and_modes#interpreting-normed-scores",
							"type": "number"
						}
					}
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/tracking",
		"raw": {
			"description": "Tracking.",
			"type": "object",
			"properties": {
				"formType": {
					"description": "Form type used for tracking.",
					"type": "string"
				},
				"formName": {
					"description": "Form name used for tracking.",
					"type": "string"
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/tracking/properties/formType",
		"raw": {
			"description": "Form type used for tracking.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/tracking/properties/formName",
		"raw": {
			"description": "Form name used for tracking.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/loginRequired",
		"raw": {
			"description": "Whether user must be login in order to enter the form. If se to true, if user is not logged in it will redirect to login landing page.",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/displayMode",
		"raw": {
			"description": "Value provided by FDS service backend. Specify behaiviour of the feature app",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/targetUrl",
		"raw": {
			"description": "Processed opportunities (filled values) from the form will be sent to this URL, if not filled in, default OPS will be used",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/dealerFiltersMapping",
		"raw": {
			"description": "Specifies mapping from car configuration data to dealer filters. Works by specifying key/value pairs of the car configuration object. Nested key/value pairs will be interpreted as logical AND statements (i.e.: {\"carlineId\":{\"01234\":{\"trimName\":{\"abc\":{\"filter\":[\"def\"]}}}}} will apply filter \"def\" only if the selected car configuration has carline id 01234 AND trim name \"abc\".",
			"examples": [
				{
					"carlineId": {
						"30100": {
							"and": {
								"salesGroupId": {
									"30002": {
										"filter": [
											"E_SALES"
										]
									}
								}
							}
						},
						"30315": {
							"and": {
								"salesGroupId": {
									"30200": {
										"and": {
											"trimName": {
												"gte": {
													"filter": [
														"E_SALES"
													]
												}
											}
										}
									},
									"30205": {
										"and": {
											"trimName": {
												"e-golf": {
													"filter": [
														"E_SALES"
													]
												}
											}
										}
									}
								}
							}
						},
						"31300": {
							"and": {
								"salesGroupId": {
									"30550": {
										"and": {
											"trimName": {
												"gte": {
													"filter": [
														"E_SALES"
													]
												}
											}
										}
									}
								}
							}
						},
						"31350": {
							"and": {
								"salesGroupId": {
									"30599": {
										"and": {
											"trimName": {
												"gte": {
													"filter": [
														"E_SALES"
													]
												}
											}
										}
									}
								}
							}
						}
					}
				}
			],
			"$ref": "#/definitions/DealerFiltersMapping"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/captcha",
		"raw": {
			"description": "Configuration for hCaptcha. If either key is not supplied or invalid, user verification will be skipped.",
			"type": "object",
			"properties": {
				"siteKey": {
					"description": "Public API key.",
					"type": "string"
				},
				"secretKey": {
					"description": "!!!FOR TESTING ONLY!!! Private API key.",
					"type": "string"
				},
				"scoreThreshold": {
					"description": "Cutoff for who is considered a bot.\nFloat 0 <= scoreThreshold <= 1\nRecommended 0.8\nRead more at https://docs.hcaptcha.com/enterprise/scores_and_modes#interpreting-normed-scores",
					"type": "number"
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/captcha/properties/siteKey",
		"raw": {
			"description": "Public API key.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/captcha/properties/secretKey",
		"raw": {
			"description": "!!!FOR TESTING ONLY!!! Private API key.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormConfiguration/properties/captcha/properties/scoreThreshold",
		"raw": {
			"description": "Cutoff for who is considered a bot.\nFloat 0 <= scoreThreshold <= 1\nRecommended 0.8\nRead more at https://docs.hcaptcha.com/enterprise/scores_and_modes#interpreting-normed-scores",
			"type": "number"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerFiltersMapping",
		"raw": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Key"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Key",
		"raw": {
			"description": "Key of the car configuration property",
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Value"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Value",
		"raw": {
			"description": "Value of the car configuration property",
			"type": "object",
			"properties": {
				"filter": {
					"description": "Array of dealer filters",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"and": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/Key"
					}
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Value/properties/filter",
		"raw": {
			"description": "Array of dealer filters",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Value/properties/and",
		"raw": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Key"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AdobeVisitorID",
		"raw": {
			"description": "Value is taken from window object",
			"title": "Adobe Visitor ID",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"adobe-visitor-id"
					]
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				}
			},
			"required": [
				"cid",
				"source"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AdobeVisitorID/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"adobe-visitor-id"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AdobeVisitorID/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelectorHiddenValue",
		"raw": {
			"description": "Value is loaded via feature app connector from the Appointment Selector\nFeature Service.",
			"title": "Appointment Selector",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"appointment-selector"
					]
				},
				"cidPrefix": {
					"description": "Prefix for CIDs defined in this fields mapping",
					"type": "string"
				},
				"connectorMapping": {
					"$ref": "#/definitions/AppointmentSelectorConnectorMapping"
				}
			},
			"required": [
				"connectorMapping",
				"source"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelectorHiddenValue/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"appointment-selector"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelectorHiddenValue/properties/cidPrefix",
		"raw": {
			"description": "Prefix for CIDs defined in this fields mapping",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelectorHiddenValue/properties/connectorMapping",
		"raw": {
			"$ref": "#/definitions/AppointmentSelectorConnectorMapping"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelectorConnectorMapping",
		"raw": {
			"description": "Defines a mapping from Appointment Feature Service data to CID/OSSPath pairs",
			"type": "object",
			"properties": {
				"date[]": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"startTimeSpan[]": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"endTimeSpan[]": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelectorConnectorMapping/properties/date[]",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelectorConnectorMapping/properties/startTimeSpan[]",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelectorConnectorMapping/properties/endTimeSpan[]",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ConnectorValue",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"type": "object",
			"properties": {
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ConnectorValue/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ConnectorValue/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationHiddenValue",
		"raw": {
			"description": "Value is loaded via feature app connector from the Car Configuration\nFeature Service.",
			"title": "Car Configuration",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"car-configuration"
					]
				},
				"cidPrefix": {
					"description": "Prefix for CIDs defined in this fields mapping",
					"type": "string"
				},
				"connectorMapping": {
					"$ref": "#/definitions/CarConfigurationConnectorMapping"
				}
			},
			"required": [
				"connectorMapping",
				"source"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationHiddenValue/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"car-configuration"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationHiddenValue/properties/cidPrefix",
		"raw": {
			"description": "Prefix for CIDs defined in this fields mapping",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationHiddenValue/properties/connectorMapping",
		"raw": {
			"$ref": "#/definitions/CarConfigurationConnectorMapping"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationConnectorMapping",
		"raw": {
			"description": "Defines a mapping from Car Configuration Feature Service data to CID/OSSPath pairs",
			"type": "object",
			"properties": {
				"carlineId": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"salesGroupId": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"trimName": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"modelId": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"modelYear": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"modelVersion": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"interiorId": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"exteriorId": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationConnectorMapping/properties/carlineId",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationConnectorMapping/properties/salesGroupId",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationConnectorMapping/properties/trimName",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationConnectorMapping/properties/modelId",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationConnectorMapping/properties/modelYear",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationConnectorMapping/properties/modelVersion",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationConnectorMapping/properties/interiorId",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CarConfigurationConnectorMapping/properties/exteriorId",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CustomerData",
		"raw": {
			"description": "Value is taken from the customers data object",
			"title": "Customer Data",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"customerData"
					]
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				},
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"profileMappingPath": {
					"description": "Path to value in the user profile data model",
					"type": "string"
				},
				"fallbackValue": {
					"description": "Value in case nothing exists under the specified path",
					"type": "string"
				}
			},
			"required": [
				"cid",
				"profileMappingPath",
				"source"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CustomerData/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"customerData"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CustomerData/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CustomerData/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CustomerData/properties/profileMappingPath",
		"raw": {
			"description": "Path to value in the user profile data model",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CustomerData/properties/fallbackValue",
		"raw": {
			"description": "Value in case nothing exists under the specified path",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorHiddenValue",
		"raw": {
			"description": "Value is loaded via feature app connector from the Dealer Search\nFeature Service.",
			"title": "Dealer Selector",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"dealer-selector"
					]
				},
				"cidPrefix": {
					"description": "Prefix for CIDs defined in this fields mapping",
					"type": "string"
				},
				"connectorMapping": {
					"$ref": "#/definitions/DealerSelectorConnectorMapping"
				}
			},
			"required": [
				"connectorMapping",
				"source"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorHiddenValue/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"dealer-selector"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorHiddenValue/properties/cidPrefix",
		"raw": {
			"description": "Prefix for CIDs defined in this fields mapping",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorHiddenValue/properties/connectorMapping",
		"raw": {
			"$ref": "#/definitions/DealerSelectorConnectorMapping"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorConnectorMapping",
		"raw": {
			"description": "Defines a mapping from Dealer Search Feature Service data to CID/OSSPath pairs",
			"type": "object",
			"properties": {
				"dealerId": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"dealerName": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"dealerStreet": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"dealerPostCode": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"dealerCity": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"dealerCountry": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"dealerEmail": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"dealerPhone": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"dealerFax": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorConnectorMapping/properties/dealerId",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorConnectorMapping/properties/dealerName",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorConnectorMapping/properties/dealerStreet",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorConnectorMapping/properties/dealerPostCode",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorConnectorMapping/properties/dealerCity",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorConnectorMapping/properties/dealerCountry",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorConnectorMapping/properties/dealerEmail",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorConnectorMapping/properties/dealerPhone",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelectorConnectorMapping/properties/dealerFax",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FDS",
		"raw": {
			"description": "Value is set here in FDS",
			"title": "FDS",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"fds"
					]
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				},
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"value": {
					"description": "Value posted to the Opportunity Service (OPS)",
					"type": [
						"string",
						"number",
						"boolean"
					]
				}
			},
			"required": [
				"cid",
				"source",
				"value"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FDS/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"fds"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FDS/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FDS/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FDS/properties/value",
		"raw": {
			"description": "Value posted to the Opportunity Service (OPS)",
			"type": [
				"string",
				"number",
				"boolean"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingCode",
		"raw": {
			"description": "Marketing code generated from car data",
			"title": "Marketing Code",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"marketingCode"
					]
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				},
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"useVictor": {
					"description": "If true, VICTOR will be used to fetch the marketing codeinstead of VICCI",
					"type": "boolean"
				}
			},
			"required": [
				"cid",
				"source"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingCode/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"marketingCode"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingCode/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingCode/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingCode/properties/useVictor",
		"raw": {
			"description": "If true, VICTOR will be used to fetch the marketing codeinstead of VICCI",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SessionStorage",
		"raw": {
			"description": "Value comes from session storage",
			"title": "Session Storage",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"sessionStorage"
					]
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				},
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"key": {
					"description": "Key under which the value is saved in session storage",
					"type": "string"
				},
				"defaultValue": {
					"description": "Value to be sent when there is nothing in the session storage",
					"type": "string"
				}
			},
			"required": [
				"cid",
				"key",
				"source"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SessionStorage/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"sessionStorage"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SessionStorage/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SessionStorage/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SessionStorage/properties/key",
		"raw": {
			"description": "Key under which the value is saved in session storage",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SessionStorage/properties/defaultValue",
		"raw": {
			"description": "Value to be sent when there is nothing in the session storage",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantHiddenValue",
		"raw": {
			"description": "Values loaded via feature app connector from the Service Assistant Feature App",
			"title": "Service Assistant",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"service-assistant"
					]
				},
				"cidPrefix": {
					"description": "Prefix for CIDs defined in this fields mapping",
					"type": "string"
				},
				"connectorMapping": {
					"$ref": "#/definitions/ServiceAssistantConnectorMapping"
				}
			},
			"required": [
				"connectorMapping",
				"source"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantHiddenValue/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"service-assistant"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantHiddenValue/properties/cidPrefix",
		"raw": {
			"description": "Prefix for CIDs defined in this fields mapping",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantHiddenValue/properties/connectorMapping",
		"raw": {
			"$ref": "#/definitions/ServiceAssistantConnectorMapping"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping",
		"raw": {
			"description": "Defines a mapping from Feature Assistant",
			"type": "object",
			"properties": {
				"vin": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"currentMileage": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"annualMileage": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"currency": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"mileageType": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"selectedServiceEventDescription": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"selectedServiceEventBrandPackageNR": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"selectedServiceEventServicePrice": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"selectedServiceEventPredictedServiceDate": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"selectedServicePositionsDescription[]": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"selectedServicePositionsBrandPackageNR[]": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"selectedServicePositionsServicePrice[]": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"selectedServicePositionsPredictedServiceDate[]": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"selectedSpecialOffersName[]": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				},
				"selectedSpecialOffersPrice[]": {
					"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
					"$ref": "#/definitions/ConnectorValue"
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/vin",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/currentMileage",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/annualMileage",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/currency",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/mileageType",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/selectedServiceEventDescription",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/selectedServiceEventBrandPackageNR",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/selectedServiceEventServicePrice",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/selectedServiceEventPredictedServiceDate",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/selectedServicePositionsDescription[]",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/selectedServicePositionsBrandPackageNR[]",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/selectedServicePositionsServicePrice[]",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/selectedServicePositionsPredictedServiceDate[]",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/selectedSpecialOffersName[]",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ServiceAssistantConnectorMapping/properties/selectedSpecialOffersPrice[]",
		"raw": {
			"description": "Mapped value from internal feature apps connector, both values are optional, if CID is not specified, property name will be used instead",
			"$ref": "#/definitions/ConnectorValue"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelector",
		"raw": {
			"description": "A Feature App for selecting a date and a time for an appointment",
			"title": "Appointment Selector",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"appointment-selector"
					]
				},
				"cidPrefix": {
					"description": "Prefix for CIDs defined in this fields mapping",
					"type": "string"
				},
				"contentConfig": {
					"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
					"type": "string"
				},
				"required": {
					"description": "Marks the field as mandatory.",
					"title": "Is Required",
					"type": "boolean"
				},
				"connectorMapping": {
					"$ref": "#/definitions/AppointmentSelectorConnectorMapping"
				}
			},
			"required": [
				"connectorMapping",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelector/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"appointment-selector"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelector/properties/cidPrefix",
		"raw": {
			"description": "Prefix for CIDs defined in this fields mapping",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelector/properties/contentConfig",
		"raw": {
			"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelector/properties/required",
		"raw": {
			"description": "Marks the field as mandatory.",
			"title": "Is Required",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AppointmentSelector/properties/connectorMapping",
		"raw": {
			"$ref": "#/definitions/AppointmentSelectorConnectorMapping"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox",
		"raw": {
			"description": "A checkbox allows the user to select one or more options of a limited number\nof choices.",
			"title": "Checkbox",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"checkbox"
					]
				},
				"options": {
					"description": "A user can select zero (if not required), one, or more options",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CheckboxOption"
					}
				},
				"label": {
					"description": "The i18n key or direct translation for the field label.",
					"type": "string"
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				},
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"required": {
					"description": "Marks the field as mandatory.",
					"title": "Is Required",
					"type": "boolean"
				},
				"errorMessage": {
					"description": "The i18n key or direct translation for the errormessage if a validation fails.",
					"type": "string"
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/RequiredIf"
							},
							{
								"$ref": "#/definitions/VisibleIf"
							}
						]
					}
				},
				"tracked": {
					"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
					"title": "Is Tracked",
					"type": "boolean"
				},
				"prefilled": {
					"description": "How is the field going to be prefilled",
					"anyOf": [
						{
							"$ref": "#/definitions/FdsPrefilled"
						},
						{
							"$ref": "#/definitions/AuthservicePrefilled"
						}
					]
				}
			},
			"required": [
				"cid",
				"label",
				"options",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"checkbox"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox/properties/options",
		"raw": {
			"description": "A user can select zero (if not required), one, or more options",
			"type": "array",
			"items": {
				"$ref": "#/definitions/CheckboxOption"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox/properties/label",
		"raw": {
			"description": "The i18n key or direct translation for the field label.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox/properties/required",
		"raw": {
			"description": "Marks the field as mandatory.",
			"title": "Is Required",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox/properties/errorMessage",
		"raw": {
			"description": "The i18n key or direct translation for the errormessage if a validation fails.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"anyOf": [
					{
						"$ref": "#/definitions/RequiredIf"
					},
					{
						"$ref": "#/definitions/VisibleIf"
					}
				]
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox/properties/tracked",
		"raw": {
			"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
			"title": "Is Tracked",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Checkbox/properties/prefilled",
		"raw": {
			"description": "How is the field going to be prefilled",
			"anyOf": [
				{
					"$ref": "#/definitions/FdsPrefilled"
				},
				{
					"$ref": "#/definitions/AuthservicePrefilled"
				}
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CheckboxOption",
		"raw": {
			"description": "Option for the checkbox field",
			"title": "Option",
			"type": "object",
			"properties": {
				"valueUnchecked": {
					"description": "The value to be submitted when the checkbox is NOT checked.",
					"type": [
						"string",
						"boolean"
					]
				},
				"preselected": {
					"description": "Preselects the checkbox.",
					"type": "boolean"
				},
				"label": {
					"description": "The i18n key or direct translation for the displayed option text.",
					"type": "string"
				},
				"value": {
					"description": "The i18n key or direct translation for the option value (not displayed).",
					"type": [
						"string",
						"boolean"
					]
				},
				"readonly": {
					"description": "Prevents the user from changing the value.",
					"type": "boolean"
				}
			},
			"required": [
				"label",
				"value"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CheckboxOption/properties/valueUnchecked",
		"raw": {
			"description": "The value to be submitted when the checkbox is NOT checked.",
			"type": [
				"string",
				"boolean"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CheckboxOption/properties/preselected",
		"raw": {
			"description": "Preselects the checkbox.",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CheckboxOption/properties/label",
		"raw": {
			"description": "The i18n key or direct translation for the displayed option text.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CheckboxOption/properties/value",
		"raw": {
			"description": "The i18n key or direct translation for the option value (not displayed).",
			"type": [
				"string",
				"boolean"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/CheckboxOption/properties/readonly",
		"raw": {
			"description": "Prevents the user from changing the value.",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/RequiredIf",
		"raw": {
			"description": "Makes this field required based on the value of some other field in the form.",
			"title": "Required If",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"requiredIf"
					]
				},
				"cid": {
					"description": "CID of the field that should trigger this dependency.",
					"title": "Trigger CID",
					"type": "string"
				},
				"value": {
					"description": "Specific value of the depended on field to trigger the dependency\n(blank means any value).",
					"type": "string"
				},
				"negate": {
					"description": "If selected the dependency will only be triggered\nif the condition is NOT met",
					"type": "boolean"
				}
			},
			"required": [
				"cid",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/RequiredIf/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"requiredIf"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/RequiredIf/properties/cid",
		"raw": {
			"description": "CID of the field that should trigger this dependency.",
			"title": "Trigger CID",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/RequiredIf/properties/value",
		"raw": {
			"description": "Specific value of the depended on field to trigger the dependency\n(blank means any value).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/RequiredIf/properties/negate",
		"raw": {
			"description": "If selected the dependency will only be triggered\nif the condition is NOT met",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/VisibleIf",
		"raw": {
			"description": "Makes this field visible based on the value of some other field in the form.",
			"title": "Visible If",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"visibleIf"
					]
				},
				"cid": {
					"description": "CID of the field that should trigger this dependency.",
					"title": "Trigger CID",
					"type": "string"
				},
				"value": {
					"type": [
						"string",
						"boolean"
					]
				},
				"negate": {
					"description": "If selected the dependency will only be triggered\nif the condition is NOT met",
					"type": "boolean"
				}
			},
			"required": [
				"cid",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/VisibleIf/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"visibleIf"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/VisibleIf/properties/cid",
		"raw": {
			"description": "CID of the field that should trigger this dependency.",
			"title": "Trigger CID",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/VisibleIf/properties/value",
		"raw": {
			"type": [
				"string",
				"boolean"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/VisibleIf/properties/negate",
		"raw": {
			"description": "If selected the dependency will only be triggered\nif the condition is NOT met",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FdsPrefilled",
		"raw": {
			"description": "With a value defined here in the form definition",
			"title": "FDS",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"fds"
					]
				},
				"value": {
					"description": "The field will be prefilled with this value",
					"type": "string"
				}
			},
			"required": [
				"source",
				"value"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FdsPrefilled/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"fds"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FdsPrefilled/properties/value",
		"raw": {
			"description": "The field will be prefilled with this value",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AuthservicePrefilled",
		"raw": {
			"description": "With a value taken from the customer data object from the Auth Service",
			"title": "Customer Data",
			"type": "object",
			"properties": {
				"source": {
					"type": "string",
					"enum": [
						"authservice"
					]
				},
				"profileMappingPath": {
					"description": "Path to value in the user profile data model",
					"type": "string"
				},
				"fallbackValue": {
					"description": "Value in case nothing exists under the specified path",
					"type": "string"
				}
			},
			"required": [
				"profileMappingPath",
				"source"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AuthservicePrefilled/properties/source",
		"raw": {
			"type": "string",
			"enum": [
				"authservice"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AuthservicePrefilled/properties/profileMappingPath",
		"raw": {
			"description": "Path to value in the user profile data model",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/AuthservicePrefilled/properties/fallbackValue",
		"raw": {
			"description": "Value in case nothing exists under the specified path",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelector",
		"raw": {
			"description": "A Feature App for search for and selecting a dealer",
			"title": "Dealer Selector",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"dealer-selector"
					]
				},
				"cidPrefix": {
					"description": "Prefix for CIDs defined in this fields mapping",
					"type": "string"
				},
				"required": {
					"description": "Marks the field as mandatory.",
					"title": "Is Required",
					"type": "boolean"
				},
				"contentConfig": {
					"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
					"type": "string"
				},
				"hideIfDataPresent": {
					"description": "If is true, this feature app component will be hidden if component has data",
					"type": "boolean"
				},
				"connectorMapping": {
					"$ref": "#/definitions/DealerSelectorConnectorMapping"
				}
			},
			"required": [
				"connectorMapping",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelector/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"dealer-selector"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelector/properties/cidPrefix",
		"raw": {
			"description": "Prefix for CIDs defined in this fields mapping",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelector/properties/required",
		"raw": {
			"description": "Marks the field as mandatory.",
			"title": "Is Required",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelector/properties/contentConfig",
		"raw": {
			"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelector/properties/hideIfDataPresent",
		"raw": {
			"description": "If is true, this feature app component will be hidden if component has data",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DealerSelector/properties/connectorMapping",
		"raw": {
			"$ref": "#/definitions/DealerSelectorConnectorMapping"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelect",
		"raw": {
			"description": "A double select field is a dropdown field containing different information\nto be selected by the customer.",
			"title": "Double Select",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"double-select"
					]
				},
				"errorMessage": {
					"description": "The i18n key or direct translation for the errormessage if a validation fails.",
					"type": "string"
				},
				"defaultSubmitValue": {
					"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
					"type": "string"
				},
				"primary": {
					"$ref": "#/definitions/DoubleSelectBase",
					"description": "Configuration for the first select"
				},
				"secondary": {
					"$ref": "#/definitions/DoubleSelectBase",
					"description": "Configuration for the second select"
				},
				"options": {
					"description": "A double select option field is a dropdown field containing different\ninformation to be selected by the customer.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoubleOption"
					}
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"$ref": "#/definitions/VisibleIf"
					}
				},
				"tracked": {
					"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
					"title": "Is Tracked",
					"type": "boolean"
				}
			},
			"required": [
				"options",
				"primary",
				"secondary",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelect/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"double-select"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelect/properties/errorMessage",
		"raw": {
			"description": "The i18n key or direct translation for the errormessage if a validation fails.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelect/properties/defaultSubmitValue",
		"raw": {
			"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelect/properties/primary",
		"raw": {
			"$ref": "#/definitions/DoubleSelectBase",
			"description": "Configuration for the first select"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelect/properties/secondary",
		"raw": {
			"$ref": "#/definitions/DoubleSelectBase",
			"description": "Configuration for the second select"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelect/properties/options",
		"raw": {
			"description": "A double select option field is a dropdown field containing different\ninformation to be selected by the customer.",
			"type": "array",
			"items": {
				"$ref": "#/definitions/DoubleOption"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelect/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"$ref": "#/definitions/VisibleIf"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelect/properties/tracked",
		"raw": {
			"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
			"title": "Is Tracked",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelectBase",
		"raw": {
			"type": "object",
			"properties": {
				"label": {
					"description": "The i18n key or direct translation for the field label.",
					"type": "string"
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				},
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"placeholder": {
					"description": "The i18n key or direct translation for the field placeholder.",
					"type": "string"
				},
				"required": {
					"description": "Marks the field as mandatory.",
					"title": "Is Required",
					"type": "boolean"
				},
				"prefilled": {
					"description": "How is the field going to be prefilled",
					"anyOf": [
						{
							"$ref": "#/definitions/FdsPrefilled"
						},
						{
							"$ref": "#/definitions/AuthservicePrefilled"
						}
					]
				}
			},
			"required": [
				"cid",
				"label",
				"placeholder"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelectBase/properties/label",
		"raw": {
			"description": "The i18n key or direct translation for the field label.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelectBase/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelectBase/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelectBase/properties/placeholder",
		"raw": {
			"description": "The i18n key or direct translation for the field placeholder.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelectBase/properties/required",
		"raw": {
			"description": "Marks the field as mandatory.",
			"title": "Is Required",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleSelectBase/properties/prefilled",
		"raw": {
			"description": "How is the field going to be prefilled",
			"anyOf": [
				{
					"$ref": "#/definitions/FdsPrefilled"
				},
				{
					"$ref": "#/definitions/AuthservicePrefilled"
				}
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleOption",
		"raw": {
			"description": "Nested options for the double select field",
			"title": "Option Group",
			"type": "object",
			"properties": {
				"options": {
					"description": "Options to be displayed in the secondary select when this option\nis selected in the primary select.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Option"
					}
				},
				"label": {
					"description": "The i18n key or direct translation for the displayed option text.",
					"type": "string"
				},
				"value": {
					"description": "The i18n key or direct translation for the option value (not displayed).",
					"type": [
						"string",
						"boolean"
					]
				},
				"readonly": {
					"description": "Prevents the user from changing the value.",
					"type": "boolean"
				}
			},
			"required": [
				"label",
				"options",
				"value"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleOption/properties/options",
		"raw": {
			"description": "Options to be displayed in the secondary select when this option\nis selected in the primary select.",
			"type": "array",
			"items": {
				"$ref": "#/definitions/Option"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleOption/properties/label",
		"raw": {
			"description": "The i18n key or direct translation for the displayed option text.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleOption/properties/value",
		"raw": {
			"description": "The i18n key or direct translation for the option value (not displayed).",
			"type": [
				"string",
				"boolean"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/DoubleOption/properties/readonly",
		"raw": {
			"description": "Prevents the user from changing the value.",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Option",
		"raw": {
			"description": "Represents one of the options the user can choose in e.g. the Select\nor Radio Group fields.",
			"title": "Option",
			"type": "object",
			"properties": {
				"label": {
					"description": "The i18n key or direct translation for the displayed option text.",
					"type": "string"
				},
				"value": {
					"description": "The i18n key or direct translation for the option value (not displayed).",
					"type": [
						"string",
						"boolean"
					]
				},
				"readonly": {
					"description": "Prevents the user from changing the value.",
					"type": "boolean"
				}
			},
			"required": [
				"label",
				"value"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Option/properties/label",
		"raw": {
			"description": "The i18n key or direct translation for the displayed option text.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Option/properties/value",
		"raw": {
			"description": "The i18n key or direct translation for the option value (not displayed).",
			"type": [
				"string",
				"boolean"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Option/properties/readonly",
		"raw": {
			"description": "Prevents the user from changing the value.",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FeatureAppSummaryField",
		"raw": {
			"description": "A summary field that can show information from a Feature Service",
			"title": "Feature App Summary Field",
			"type": "object",
			"properties": {
				"type": {
					"enum": [
						"appointment-selector-summary",
						"dealer-selector-summary"
					],
					"type": "string"
				},
				"label": {
					"description": "I18n key for the markdown label of the summary field. Label can contain %CID%\nplaceholders that will be replaced with values from the form",
					"type": "string"
				},
				"icon": {
					"description": "Icon to be shown next to the summary text",
					"enum": [
						"calendar",
						"checkmark",
						"close",
						"internet",
						"locate",
						"mail",
						"phone",
						"pin",
						"star-filled"
					],
					"type": "string"
				},
				"contentConfig": {
					"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
					"type": "string"
				},
				"target": {
					"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
					"enum": [
						"_blank",
						"_parent",
						"_self",
						"_top"
					],
					"type": "string"
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"$ref": "#/definitions/VisibleIf"
					}
				}
			},
			"required": [
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FeatureAppSummaryField/properties/type",
		"raw": {
			"enum": [
				"appointment-selector-summary",
				"dealer-selector-summary"
			],
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FeatureAppSummaryField/properties/label",
		"raw": {
			"description": "I18n key for the markdown label of the summary field. Label can contain %CID%\nplaceholders that will be replaced with values from the form",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FeatureAppSummaryField/properties/icon",
		"raw": {
			"description": "Icon to be shown next to the summary text",
			"enum": [
				"calendar",
				"checkmark",
				"close",
				"internet",
				"locate",
				"mail",
				"phone",
				"pin",
				"star-filled"
			],
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FeatureAppSummaryField/properties/contentConfig",
		"raw": {
			"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FeatureAppSummaryField/properties/target",
		"raw": {
			"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
			"enum": [
				"_blank",
				"_parent",
				"_self",
				"_top"
			],
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FeatureAppSummaryField/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"$ref": "#/definitions/VisibleIf"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormGroup",
		"raw": {
			"description": "Enable group elements and provide specific title for an element group",
			"title": "Form Group",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"form-group"
					]
				},
				"title": {
					"description": "The i18n key or direct translation for the field title",
					"type": "string"
				},
				"accentuated": {
					"description": "Flag to enable accentuated design",
					"type": "boolean"
				},
				"fields": {
					"description": "Field types that could be grouped",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/AppointmentSelector"
							},
							{
								"$ref": "#/definitions/Checkbox"
							},
							{
								"$ref": "#/definitions/DealerSelector"
							},
							{
								"$ref": "#/definitions/DoubleSelect"
							},
							{
								"$ref": "#/definitions/FeatureAppSummaryField"
							},
							{
								"$ref": "#/definitions/FormGroup"
							},
							{
								"$ref": "#/definitions/Input"
							},
							{
								"$ref": "#/definitions/MarketingConsentText"
							},
							{
								"$ref": "#/definitions/ModelSelector"
							},
							{
								"$ref": "#/definitions/Radio"
							},
							{
								"$ref": "#/definitions/Richtext"
							},
							{
								"$ref": "#/definitions/Select"
							},
							{
								"$ref": "#/definitions/SummaryField"
							},
							{
								"$ref": "#/definitions/Textarea"
							}
						]
					}
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"$ref": "#/definitions/VisibleIf"
					}
				}
			},
			"required": [
				"fields",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormGroup/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"form-group"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormGroup/properties/title",
		"raw": {
			"description": "The i18n key or direct translation for the field title",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormGroup/properties/accentuated",
		"raw": {
			"description": "Flag to enable accentuated design",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormGroup/properties/fields",
		"raw": {
			"description": "Field types that could be grouped",
			"type": "array",
			"items": {
				"anyOf": [
					{
						"$ref": "#/definitions/AppointmentSelector"
					},
					{
						"$ref": "#/definitions/Checkbox"
					},
					{
						"$ref": "#/definitions/DealerSelector"
					},
					{
						"$ref": "#/definitions/DoubleSelect"
					},
					{
						"$ref": "#/definitions/FeatureAppSummaryField"
					},
					{
						"$ref": "#/definitions/FormGroup"
					},
					{
						"$ref": "#/definitions/Input"
					},
					{
						"$ref": "#/definitions/MarketingConsentText"
					},
					{
						"$ref": "#/definitions/ModelSelector"
					},
					{
						"$ref": "#/definitions/Radio"
					},
					{
						"$ref": "#/definitions/Richtext"
					},
					{
						"$ref": "#/definitions/Select"
					},
					{
						"$ref": "#/definitions/SummaryField"
					},
					{
						"$ref": "#/definitions/Textarea"
					}
				]
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormGroup/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"$ref": "#/definitions/VisibleIf"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input",
		"raw": {
			"description": "The input field is the most basic general form element, showing just a simple\ninput field for numbers or strings.",
			"title": "Input",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"input"
					]
				},
				"label": {
					"description": "The i18n key or direct translation for the field label.",
					"type": "string"
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				},
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"required": {
					"description": "Marks the field as mandatory.",
					"title": "Is Required",
					"type": "boolean"
				},
				"defaultSubmitValue": {
					"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
					"type": "string"
				},
				"errorMessage": {
					"description": "The i18n key or direct translation for the errormessage if a validation fails.",
					"type": "string"
				},
				"inputType": {
					"description": "date, email, url, number",
					"enum": [
						"date",
						"email",
						"number",
						"text",
						"url"
					],
					"type": "string"
				},
				"pattern": {
					"description": "Regex which has to be entered and will be validated",
					"type": "string"
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/RequiredIf"
							},
							{
								"$ref": "#/definitions/VisibleIf"
							}
						]
					}
				},
				"tracked": {
					"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
					"title": "Is Tracked",
					"type": "boolean"
				},
				"prefilled": {
					"description": "How is the field going to be prefilled",
					"anyOf": [
						{
							"$ref": "#/definitions/FdsPrefilled"
						},
						{
							"$ref": "#/definitions/AuthservicePrefilled"
						}
					]
				}
			},
			"required": [
				"cid",
				"inputType",
				"label",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"input"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/label",
		"raw": {
			"description": "The i18n key or direct translation for the field label.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/required",
		"raw": {
			"description": "Marks the field as mandatory.",
			"title": "Is Required",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/defaultSubmitValue",
		"raw": {
			"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/errorMessage",
		"raw": {
			"description": "The i18n key or direct translation for the errormessage if a validation fails.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/inputType",
		"raw": {
			"description": "date, email, url, number",
			"enum": [
				"date",
				"email",
				"number",
				"text",
				"url"
			],
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/pattern",
		"raw": {
			"description": "Regex which has to be entered and will be validated",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"anyOf": [
					{
						"$ref": "#/definitions/RequiredIf"
					},
					{
						"$ref": "#/definitions/VisibleIf"
					}
				]
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/tracked",
		"raw": {
			"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
			"title": "Is Tracked",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Input/properties/prefilled",
		"raw": {
			"description": "How is the field going to be prefilled",
			"anyOf": [
				{
					"$ref": "#/definitions/FdsPrefilled"
				},
				{
					"$ref": "#/definitions/AuthservicePrefilled"
				}
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText",
		"raw": {
			"description": "Text field displaying the latest MEV (Marketing Einverständnis Erklärung -\nMarketing Consent Statement) texts from the IDK (VW Identity Kit)",
			"title": "Marketing Consent",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"mev-text"
					]
				},
				"cid": {
					"description": "Under this CID will be stored the outcome of user consent (either true or false)\n\nIf we will not show the radio buttons to the user, cid value will not be sent",
					"type": "string"
				},
				"target": {
					"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
					"enum": [
						"_blank",
						"_parent",
						"_self",
						"_top"
					],
					"type": "string"
				},
				"mdKey": {
					"description": "Identifier of the MEV text",
					"type": "string"
				},
				"consentAlreadyGiven": {
					"description": "Provides information for the simplified screen that shows that the user has already consented",
					"type": "object",
					"properties": {
						"linkText": {
							"description": "Text for Link to account or consent management",
							"type": "string"
						},
						"linkHref": {
							"description": "Href for Link to user account or consent management",
							"type": "string"
						},
						"text": {
							"description": "Main text that will be shown",
							"type": "string"
						}
					},
					"required": [
						"text"
					]
				},
				"defaultTitle": {
					"description": "Default title, will be shown only if MEV declaration could not be fetched or MEV declaration does not contain it",
					"type": "string"
				},
				"legalText": {
					"description": "I18n key or text directly.",
					"type": "string"
				},
				"defaultLegalBodies": {
					"description": "Default legal bodies (keys), will be shown only if MEV declaration could not be fetched or MEV declaration does not contain it\nAll of them will be translated from i18n translations under general.legalBodies[key]",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"legalLinkText": {
					"description": "Text for Link to legal management",
					"type": "string"
				},
				"legalLinkHref": {
					"description": "Href for Link to legal management",
					"type": "string"
				},
				"defaultText": {
					"description": "Displayed in case the MEV declaration could not be fetched, or if MEV declaration does not contain it. <br/>\nMarkdown supported",
					"type": "string"
				},
				"defaultDisclaimer": {
					"description": "Default disclaimer, will be shown only if MEV declaration could not be fetched or MEV declaration does not contain it. <br/>\nMarkdown supported",
					"type": "string"
				},
				"agreeText": {
					"description": "Text for agree button for the user consent to MEV",
					"type": "string"
				},
				"disagreeText": {
					"description": "Text for disagree button for the user consent to MEV",
					"type": "string"
				},
				"trackingKey": {
					"description": "Text used as a key for tracking of marketing consent",
					"type": "string"
				},
				"errorMessage": {
					"description": "Will be shown if user has not sent permission to Marketing API\nand has not selected any radio option",
					"type": "string"
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"$ref": "#/definitions/VisibleIf"
					}
				}
			},
			"required": [
				"agreeText",
				"cid",
				"consentAlreadyGiven",
				"disagreeText",
				"mdKey",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"mev-text"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/cid",
		"raw": {
			"description": "Under this CID will be stored the outcome of user consent (either true or false)\n\nIf we will not show the radio buttons to the user, cid value will not be sent",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/target",
		"raw": {
			"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
			"enum": [
				"_blank",
				"_parent",
				"_self",
				"_top"
			],
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/mdKey",
		"raw": {
			"description": "Identifier of the MEV text",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/consentAlreadyGiven",
		"raw": {
			"description": "Provides information for the simplified screen that shows that the user has already consented",
			"type": "object",
			"properties": {
				"linkText": {
					"description": "Text for Link to account or consent management",
					"type": "string"
				},
				"linkHref": {
					"description": "Href for Link to user account or consent management",
					"type": "string"
				},
				"text": {
					"description": "Main text that will be shown",
					"type": "string"
				}
			},
			"required": [
				"text"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/consentAlreadyGiven/properties/linkText",
		"raw": {
			"description": "Text for Link to account or consent management",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/consentAlreadyGiven/properties/linkHref",
		"raw": {
			"description": "Href for Link to user account or consent management",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/consentAlreadyGiven/properties/text",
		"raw": {
			"description": "Main text that will be shown",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/defaultTitle",
		"raw": {
			"description": "Default title, will be shown only if MEV declaration could not be fetched or MEV declaration does not contain it",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/legalText",
		"raw": {
			"description": "I18n key or text directly.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/defaultLegalBodies",
		"raw": {
			"description": "Default legal bodies (keys), will be shown only if MEV declaration could not be fetched or MEV declaration does not contain it\nAll of them will be translated from i18n translations under general.legalBodies[key]",
			"type": "array",
			"items": {
				"type": "string"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/legalLinkText",
		"raw": {
			"description": "Text for Link to legal management",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/legalLinkHref",
		"raw": {
			"description": "Href for Link to legal management",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/defaultText",
		"raw": {
			"description": "Displayed in case the MEV declaration could not be fetched, or if MEV declaration does not contain it. <br/>\nMarkdown supported",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/defaultDisclaimer",
		"raw": {
			"description": "Default disclaimer, will be shown only if MEV declaration could not be fetched or MEV declaration does not contain it. <br/>\nMarkdown supported",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/agreeText",
		"raw": {
			"description": "Text for agree button for the user consent to MEV",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/disagreeText",
		"raw": {
			"description": "Text for disagree button for the user consent to MEV",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/trackingKey",
		"raw": {
			"description": "Text used as a key for tracking of marketing consent",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/errorMessage",
		"raw": {
			"description": "Will be shown if user has not sent permission to Marketing API\nand has not selected any radio option",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/MarketingConsentText/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"$ref": "#/definitions/VisibleIf"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ModelSelector",
		"raw": {
			"description": "A Feature App for selecting a car configuration",
			"title": "Model Selector",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"model-selector"
					]
				},
				"cidPrefix": {
					"description": "Prefix for CIDs defined in this fields mapping",
					"type": "string"
				},
				"contentConfig": {
					"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
					"type": "string"
				},
				"required": {
					"description": "Marks the field as mandatory.",
					"title": "Is Required",
					"type": "boolean"
				},
				"connectorMapping": {
					"$ref": "#/definitions/CarConfigurationConnectorMapping"
				},
				"hideIfDataPresent": {
					"description": "If is true, this feature app component will be hidden if component has data",
					"type": "boolean"
				}
			},
			"required": [
				"connectorMapping",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ModelSelector/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"model-selector"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ModelSelector/properties/cidPrefix",
		"raw": {
			"description": "Prefix for CIDs defined in this fields mapping",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ModelSelector/properties/contentConfig",
		"raw": {
			"description": "Feature App Content Configuration to be given to this Feature App. (JSON)",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ModelSelector/properties/required",
		"raw": {
			"description": "Marks the field as mandatory.",
			"title": "Is Required",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ModelSelector/properties/connectorMapping",
		"raw": {
			"$ref": "#/definitions/CarConfigurationConnectorMapping"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/ModelSelector/properties/hideIfDataPresent",
		"raw": {
			"description": "If is true, this feature app component will be hidden if component has data",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio",
		"raw": {
			"description": "Only one radio button in a given group can be selected at the same time.\nThe user cannot deselect a once selected radio, therefore it is recommended\nto only use radio groups as required and/or with a preselected option.",
			"title": "Radio Group",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"radio"
					]
				},
				"label": {
					"description": "The i18n key or direct translation for the field label.",
					"type": "string"
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				},
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"required": {
					"description": "Marks the field as mandatory.",
					"title": "Is Required",
					"type": "boolean"
				},
				"defaultSubmitValue": {
					"type": [
						"string",
						"boolean"
					]
				},
				"options": {
					"description": "A user can select zero (if not required) or one of the options.\nThey cannot, however, deselect an option.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Option"
					}
				},
				"errorMessage": {
					"description": "The i18n key or direct translation for the errormessage if a validation fails.",
					"type": "string"
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/RequiredIf"
							},
							{
								"$ref": "#/definitions/VisibleIf"
							}
						]
					}
				},
				"tracked": {
					"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
					"title": "Is Tracked",
					"type": "boolean"
				},
				"prefilled": {
					"description": "How is the field going to be prefilled",
					"anyOf": [
						{
							"$ref": "#/definitions/FdsPrefilled"
						},
						{
							"$ref": "#/definitions/AuthservicePrefilled"
						}
					]
				},
				"isContactChannel": {
					"type": "boolean"
				}
			},
			"required": [
				"cid",
				"label",
				"options",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"radio"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/label",
		"raw": {
			"description": "The i18n key or direct translation for the field label.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/required",
		"raw": {
			"description": "Marks the field as mandatory.",
			"title": "Is Required",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/defaultSubmitValue",
		"raw": {
			"type": [
				"string",
				"boolean"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/options",
		"raw": {
			"description": "A user can select zero (if not required) or one of the options.\nThey cannot, however, deselect an option.",
			"type": "array",
			"items": {
				"$ref": "#/definitions/Option"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/errorMessage",
		"raw": {
			"description": "The i18n key or direct translation for the errormessage if a validation fails.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"anyOf": [
					{
						"$ref": "#/definitions/RequiredIf"
					},
					{
						"$ref": "#/definitions/VisibleIf"
					}
				]
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/tracked",
		"raw": {
			"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
			"title": "Is Tracked",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/prefilled",
		"raw": {
			"description": "How is the field going to be prefilled",
			"anyOf": [
				{
					"$ref": "#/definitions/FdsPrefilled"
				},
				{
					"$ref": "#/definitions/AuthservicePrefilled"
				}
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Radio/properties/isContactChannel",
		"raw": {
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Richtext",
		"raw": {
			"description": "Rich Text is a field type that enables to create text content, supporting\nvarious text formats such as bold, italic, links, lists etc.",
			"title": "Richtext",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"richtext"
					]
				},
				"target": {
					"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
					"enum": [
						"_blank",
						"_parent",
						"_self",
						"_top"
					],
					"type": "string"
				},
				"value": {
					"description": "I18n key for the content of the richtext field.",
					"type": "string"
				},
				"accentuated": {
					"description": "Flag to enable accentuated design (notification bar)",
					"type": "boolean"
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"$ref": "#/definitions/VisibleIf"
					}
				}
			},
			"required": [
				"type",
				"value"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Richtext/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"richtext"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Richtext/properties/target",
		"raw": {
			"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
			"enum": [
				"_blank",
				"_parent",
				"_self",
				"_top"
			],
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Richtext/properties/value",
		"raw": {
			"description": "I18n key for the content of the richtext field.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Richtext/properties/accentuated",
		"raw": {
			"description": "Flag to enable accentuated design (notification bar)",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Richtext/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"$ref": "#/definitions/VisibleIf"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select",
		"raw": {
			"description": "A select field is a dropdown field containing different information\nto be selected by the customer.",
			"title": "Select",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"select"
					]
				},
				"label": {
					"description": "The i18n key or direct translation for the field label.",
					"type": "string"
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				},
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"placeholder": {
					"description": "The i18n key or direct translation for the field placeholder.",
					"type": "string"
				},
				"required": {
					"description": "Marks the field as mandatory.",
					"title": "Is Required",
					"type": "boolean"
				},
				"defaultSubmitValue": {
					"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
					"type": "string"
				},
				"options": {
					"description": "A user can select zero (if not required) or one of the options.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Option"
					}
				},
				"errorMessage": {
					"description": "The i18n key or direct translation for the errormessage if a validation fails.",
					"type": "string"
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/RequiredIf"
							},
							{
								"$ref": "#/definitions/VisibleIf"
							}
						]
					}
				},
				"tracked": {
					"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
					"title": "Is Tracked",
					"type": "boolean"
				},
				"disabled": {
					"description": "If checked, the field will be displayed as disabled and the user will\nnot be able to interact with it",
					"title": "Is Disabled",
					"type": "boolean"
				},
				"prefilled": {
					"description": "How is the field going to be prefilled",
					"anyOf": [
						{
							"$ref": "#/definitions/FdsPrefilled"
						},
						{
							"$ref": "#/definitions/AuthservicePrefilled"
						}
					]
				}
			},
			"required": [
				"cid",
				"label",
				"options",
				"placeholder",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"select"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/label",
		"raw": {
			"description": "The i18n key or direct translation for the field label.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/placeholder",
		"raw": {
			"description": "The i18n key or direct translation for the field placeholder.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/required",
		"raw": {
			"description": "Marks the field as mandatory.",
			"title": "Is Required",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/defaultSubmitValue",
		"raw": {
			"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/options",
		"raw": {
			"description": "A user can select zero (if not required) or one of the options.",
			"type": "array",
			"items": {
				"$ref": "#/definitions/Option"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/errorMessage",
		"raw": {
			"description": "The i18n key or direct translation for the errormessage if a validation fails.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"anyOf": [
					{
						"$ref": "#/definitions/RequiredIf"
					},
					{
						"$ref": "#/definitions/VisibleIf"
					}
				]
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/tracked",
		"raw": {
			"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
			"title": "Is Tracked",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/disabled",
		"raw": {
			"description": "If checked, the field will be displayed as disabled and the user will\nnot be able to interact with it",
			"title": "Is Disabled",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Select/properties/prefilled",
		"raw": {
			"description": "How is the field going to be prefilled",
			"anyOf": [
				{
					"$ref": "#/definitions/FdsPrefilled"
				},
				{
					"$ref": "#/definitions/AuthservicePrefilled"
				}
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SummaryField",
		"raw": {
			"description": "A summary field that can show information that has been already entered\nby the user into the form",
			"title": "General Summary",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"summary"
					]
				},
				"label": {
					"description": "I18n key for the markdown label of the summary field. Label can contain %CID%\nplaceholders that will be replaced with values from the form",
					"type": "string"
				},
				"value": {
					"description": "I18n key for the markdown content of the summary field. Value can contain %CID% placeholders that will be replaced with values from the form",
					"type": "string"
				},
				"icon": {
					"description": "Icon to be shown next to the summary text",
					"enum": [
						"calendar",
						"checkmark",
						"close",
						"internet",
						"locate",
						"mail",
						"phone",
						"pin",
						"star-filled"
					],
					"type": "string"
				},
				"target": {
					"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
					"enum": [
						"_blank",
						"_parent",
						"_self",
						"_top"
					],
					"type": "string"
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"$ref": "#/definitions/VisibleIf"
					}
				}
			},
			"required": [
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SummaryField/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"summary"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SummaryField/properties/label",
		"raw": {
			"description": "I18n key for the markdown label of the summary field. Label can contain %CID%\nplaceholders that will be replaced with values from the form",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SummaryField/properties/value",
		"raw": {
			"description": "I18n key for the markdown content of the summary field. Value can contain %CID% placeholders that will be replaced with values from the form",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SummaryField/properties/icon",
		"raw": {
			"description": "Icon to be shown next to the summary text",
			"enum": [
				"calendar",
				"checkmark",
				"close",
				"internet",
				"locate",
				"mail",
				"phone",
				"pin",
				"star-filled"
			],
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SummaryField/properties/target",
		"raw": {
			"description": "Where should the links open (_blank: new tab, _self: in the same tab,\n_parent: parent browsing context, _top: topmost browsing context).",
			"enum": [
				"_blank",
				"_parent",
				"_self",
				"_top"
			],
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/SummaryField/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"$ref": "#/definitions/VisibleIf"
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea",
		"raw": {
			"description": "A textarea field represents a multi-line plain-text editing control,useful\nwhen you want to allow users to enter a sizeable amount of free-form text.",
			"title": "Text Area",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"textarea"
					]
				},
				"label": {
					"description": "The i18n key or direct translation for the field label.",
					"type": "string"
				},
				"cid": {
					"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
					"type": "string"
				},
				"ossPath": {
					"description": "OSS path for the XML.",
					"type": "string"
				},
				"required": {
					"description": "Marks the field as mandatory.",
					"title": "Is Required",
					"type": "boolean"
				},
				"errorMessage": {
					"description": "The i18n key or direct translation for the errormessage if a validation fails.",
					"type": "string"
				},
				"pattern": {
					"description": "Regex which has to be entered and will be validated",
					"type": "string"
				},
				"defaultSubmitValue": {
					"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
					"type": "string"
				},
				"readonly": {
					"description": "Marks the field as read only",
					"title": "Is Readonly",
					"type": "boolean"
				},
				"minLength": {
					"description": "Specifies a minimum number of characters that the field is allowed to contain.",
					"type": "number"
				},
				"maxLength": {
					"description": "Specifies a maximum number of characters that the field is allowed to contain.",
					"type": "number"
				},
				"rows": {
					"description": "The number of visible text lines for the control.",
					"type": "number"
				},
				"dependencies": {
					"description": "Conditions influencing the display and behaviour of the field.",
					"title": "Dependencies",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/RequiredIf"
							},
							{
								"$ref": "#/definitions/VisibleIf"
							}
						]
					}
				},
				"tracked": {
					"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
					"title": "Is Tracked",
					"type": "boolean"
				},
				"prefilled": {
					"description": "How is the field going to be prefilled",
					"anyOf": [
						{
							"$ref": "#/definitions/FdsPrefilled"
						},
						{
							"$ref": "#/definitions/AuthservicePrefilled"
						}
					]
				}
			},
			"required": [
				"cid",
				"label",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"textarea"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/label",
		"raw": {
			"description": "The i18n key or direct translation for the field label.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/cid",
		"raw": {
			"description": "Also known as \"Content Id\" it is a value that will be sent when the form is posted to the Opportunity Service (OPS).",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/ossPath",
		"raw": {
			"description": "OSS path for the XML.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/required",
		"raw": {
			"description": "Marks the field as mandatory.",
			"title": "Is Required",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/errorMessage",
		"raw": {
			"description": "The i18n key or direct translation for the errormessage if a validation fails.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/pattern",
		"raw": {
			"description": "Regex which has to be entered and will be validated",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/defaultSubmitValue",
		"raw": {
			"description": "The default value to be submitted when the user didn't input any value\nor no value was preselected.",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/readonly",
		"raw": {
			"description": "Marks the field as read only",
			"title": "Is Readonly",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/minLength",
		"raw": {
			"description": "Specifies a minimum number of characters that the field is allowed to contain.",
			"type": "number"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/maxLength",
		"raw": {
			"description": "Specifies a maximum number of characters that the field is allowed to contain.",
			"type": "number"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/rows",
		"raw": {
			"description": "The number of visible text lines for the control.",
			"type": "number"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/dependencies",
		"raw": {
			"description": "Conditions influencing the display and behaviour of the field.",
			"title": "Dependencies",
			"type": "array",
			"items": {
				"anyOf": [
					{
						"$ref": "#/definitions/RequiredIf"
					},
					{
						"$ref": "#/definitions/VisibleIf"
					}
				]
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/tracked",
		"raw": {
			"description": "Marks if the element value should be tracked. If the property is set to false\nwe only track the CID of the element",
			"title": "Is Tracked",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/Textarea/properties/prefilled",
		"raw": {
			"description": "How is the field going to be prefilled",
			"anyOf": [
				{
					"$ref": "#/definitions/FdsPrefilled"
				},
				{
					"$ref": "#/definitions/AuthservicePrefilled"
				}
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormStep",
		"raw": {
			"description": "Groups form fields into consecutive steps",
			"title": "Form Step",
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"form-step"
					]
				},
				"title": {
					"description": "Label of a checkmark shown in the next step",
					"type": "string"
				},
				"skipStep": {
					"description": "If is true, this step will be skipped and in the next step a checkmark icon will be shown",
					"type": "boolean"
				},
				"skipStepIfFieldHasData": {
					"description": "Should contain a field type. If this type is found within this form step and has data the entire form step will be skipped",
					"examples": [
						"model-selector"
					],
					"type": "string"
				},
				"successPage": {
					"type": "boolean"
				},
				"fields": {
					"description": "Fields that can belong to form step.",
					"type": "array",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/AppointmentSelector"
							},
							{
								"$ref": "#/definitions/Checkbox"
							},
							{
								"$ref": "#/definitions/DealerSelector"
							},
							{
								"$ref": "#/definitions/DoubleSelect"
							},
							{
								"$ref": "#/definitions/FeatureAppSummaryField"
							},
							{
								"$ref": "#/definitions/FormGroup"
							},
							{
								"$ref": "#/definitions/Input"
							},
							{
								"$ref": "#/definitions/MarketingConsentText"
							},
							{
								"$ref": "#/definitions/ModelSelector"
							},
							{
								"$ref": "#/definitions/Radio"
							},
							{
								"$ref": "#/definitions/Richtext"
							},
							{
								"$ref": "#/definitions/Select"
							},
							{
								"$ref": "#/definitions/SummaryField"
							},
							{
								"$ref": "#/definitions/Textarea"
							}
						]
					}
				}
			},
			"required": [
				"fields",
				"type"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormStep/properties/type",
		"raw": {
			"type": "string",
			"enum": [
				"form-step"
			]
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormStep/properties/title",
		"raw": {
			"description": "Label of a checkmark shown in the next step",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormStep/properties/skipStep",
		"raw": {
			"description": "If is true, this step will be skipped and in the next step a checkmark icon will be shown",
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormStep/properties/skipStepIfFieldHasData",
		"raw": {
			"description": "Should contain a field type. If this type is found within this form step and has data the entire form step will be skipped",
			"examples": [
				"model-selector"
			],
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormStep/properties/successPage",
		"raw": {
			"type": "boolean"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/definitions/FormStep/properties/fields",
		"raw": {
			"description": "Fields that can belong to form step.",
			"type": "array",
			"items": {
				"anyOf": [
					{
						"$ref": "#/definitions/AppointmentSelector"
					},
					{
						"$ref": "#/definitions/Checkbox"
					},
					{
						"$ref": "#/definitions/DealerSelector"
					},
					{
						"$ref": "#/definitions/DoubleSelect"
					},
					{
						"$ref": "#/definitions/FeatureAppSummaryField"
					},
					{
						"$ref": "#/definitions/FormGroup"
					},
					{
						"$ref": "#/definitions/Input"
					},
					{
						"$ref": "#/definitions/MarketingConsentText"
					},
					{
						"$ref": "#/definitions/ModelSelector"
					},
					{
						"$ref": "#/definitions/Radio"
					},
					{
						"$ref": "#/definitions/Richtext"
					},
					{
						"$ref": "#/definitions/Select"
					},
					{
						"$ref": "#/definitions/SummaryField"
					},
					{
						"$ref": "#/definitions/Textarea"
					}
				]
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/id",
		"raw": {
			"description": "The id of the form definition, by which the form is accessible by the FDS. It should consists of tenant and form and application.",
			"title": "Form Definition ID",
			"pattern": "^.+:.+$",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/tenant",
		"raw": {
			"description": "The tenant should be the same as the DCRM-Broker Backend Tenant.",
			"title": "FDS Tenant",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/form",
		"raw": {
			"description": "The name for the form (e.g. quote, contact, testdrive, service,...)",
			"title": "Form Name",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/version",
		"raw": {
			"description": "Version Number.",
			"type": "number"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/headline",
		"raw": {
			"description": "i18n key or direct value for form's headline",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/subheadline",
		"raw": {
			"description": "i18n key or direct value for form's sub headline",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/submitFormErrorMessage",
		"raw": {
			"description": "Error message to be displayed when form submission fails",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/formStep",
		"raw": {
			"description": "General configuration for all form steps",
			"title": "Form Step Configuration",
			"type": "object",
			"properties": {
				"stepButtonLabel": {
					"description": "i18n key for next button label",
					"type": "string"
				},
				"submitButtonLabel": {
					"description": "i18n key for submit button label",
					"type": "string"
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/formStep/properties/stepButtonLabel",
		"raw": {
			"description": "i18n key for next button label",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/formStep/properties/submitButtonLabel",
		"raw": {
			"description": "i18n key for submit button label",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/configuration",
		"raw": {
			"description": "Configuration properties.",
			"$ref": "#/definitions/FormConfiguration"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/hiddenValues",
		"raw": {
			"description": "Values to be passed through to the OPS (or specified target URL) without being displayed in the form",
			"type": "array",
			"items": {
				"anyOf": [
					{
						"$ref": "#/definitions/AdobeVisitorID"
					},
					{
						"$ref": "#/definitions/AppointmentSelectorHiddenValue"
					},
					{
						"$ref": "#/definitions/CarConfigurationHiddenValue"
					},
					{
						"$ref": "#/definitions/CustomerData"
					},
					{
						"$ref": "#/definitions/DealerSelectorHiddenValue"
					},
					{
						"$ref": "#/definitions/FDS"
					},
					{
						"$ref": "#/definitions/MarketingCode"
					},
					{
						"$ref": "#/definitions/SessionStorage"
					},
					{
						"$ref": "#/definitions/ServiceAssistantHiddenValue"
					}
				]
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/fields",
		"raw": {
			"description": "Fields to be displayed inside the form",
			"type": "array",
			"items": {
				"anyOf": [
					{
						"$ref": "#/definitions/AppointmentSelector"
					},
					{
						"$ref": "#/definitions/Checkbox"
					},
					{
						"$ref": "#/definitions/DealerSelector"
					},
					{
						"$ref": "#/definitions/DoubleSelect"
					},
					{
						"$ref": "#/definitions/FeatureAppSummaryField"
					},
					{
						"$ref": "#/definitions/FormGroup"
					},
					{
						"$ref": "#/definitions/FormStep"
					},
					{
						"$ref": "#/definitions/Input"
					},
					{
						"$ref": "#/definitions/MarketingConsentText"
					},
					{
						"$ref": "#/definitions/ModelSelector"
					},
					{
						"$ref": "#/definitions/Radio"
					},
					{
						"$ref": "#/definitions/Richtext"
					},
					{
						"$ref": "#/definitions/Select"
					},
					{
						"$ref": "#/definitions/SummaryField"
					},
					{
						"$ref": "#/definitions/Textarea"
					}
				]
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/successPage",
		"raw": {
			"description": "DEPRECATED: Use form step with successPage set to true\nand submitFormErrorMessage instead",
			"title": "[DEPRECATED] Success Page Config",
			"type": "object",
			"properties": {
				"headline": {
					"description": "DEPRECATED: Moved to form step field\n\ni18n key for success page headline",
					"type": "string"
				},
				"content": {
					"description": "DEPRECATED: Moved to form step field\n\ni18n key for success page content",
					"type": "string"
				},
				"buttonLabel": {
					"description": "DEPRECATED: Moved to form step field\n\ni18n key for success page button label",
					"type": "string"
				},
				"errorMessage": {
					"description": "DEPRECATED: Moved to submitFormErrorMessage\n\ni18n key for success page error message",
					"type": "string"
				}
			}
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/successPage/properties/headline",
		"raw": {
			"description": "DEPRECATED: Moved to form step field\n\ni18n key for success page headline",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/successPage/properties/content",
		"raw": {
			"description": "DEPRECATED: Moved to form step field\n\ni18n key for success page content",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/successPage/properties/buttonLabel",
		"raw": {
			"description": "DEPRECATED: Moved to form step field\n\ni18n key for success page button label",
			"type": "string"
		},
		"children": [],
		"parents": []
	},
	{
		"uri": "https://example.com/properties/successPage/properties/errorMessage",
		"raw": {
			"description": "DEPRECATED: Moved to submitFormErrorMessage\n\ni18n key for success page error message",
			"type": "string"
		},
		"children": [],
		"parents": []
	}
]